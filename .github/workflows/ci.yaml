name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.adoc'
      - '**.md'
      - 'samples/**'
      - 'LICENSE'
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - main
    paths-ignore:
      - '**.adoc'
      - '**.md'
      - 'samples/**'
      - 'LICENSE'

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: actions/setup-go@v4
        with:
          go-version: v1.19
      - uses: golangci/golangci-lint-action@v2
        with:
          version: v1.49.0
          only-new-issues: true
          args: --timeout=5m
          skip-go-installation: true
  verify-code:
    name: Verify code
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.19.x
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.x
        id: go
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - name: Run make verify-code
        run: |
          make verify-code
  verify-manifests:
    name: Verify manifests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.19.x
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.x
        id: go
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - name: Run make verify-manifests
        run: |
          make verify-manifests
  test_suite:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: actions/setup-go@v4
        with:
          go-version: v1.19
      - name: Run suite
        run: |
          make test
